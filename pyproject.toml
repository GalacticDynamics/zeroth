[build-system]
  build-backend = "hatchling.build"
  requires      = ["hatch-vcs", "hatchling"]


[project]
  authors = [
    { name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com" },
  ]
  classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
  ]
  dependencies = []
  description = "Efficiently get the index-0 element of an iterable."
  dynamic = ["version"]
  license.file = "LICENSE"
  name = "zeroth"
  readme = "README.md"
  requires-python = ">=3.8"

  [project.optional-dependencies]
    dev = ["zeroth[docs,test]"]
    docs = [
      "furo>=2023.08.17",
      "myst_parser>=0.13",
      "sphinx>=7.0",
      "sphinx_autodoc_typehints",
      "sphinx_copybutton",
    ]
    test = [
      "numpy",
      "pytest >=6",
      "pytest-cov >=3",
      "pytest-github-actions-annotate-failures",
      "sybil",
    ]

  [project.urls]
    "Bug Tracker" = "https://github.com/GalacticDynamics/zeroth/issues"
    Changelog     = "https://github.com/GalacticDynamics/zeroth/releases"
    Discussions   = "https://github.com/GalacticDynamics/zeroth/discussions"
    Homepage      = "https://github.com/GalacticDynamics/zeroth"


[tool.hatch]
  version.source = "vcs"

  [tool.hatch.envs.default]
    features     = ["test"]
    scripts.test = "pytest {args}"


[tool.pytest.ini_options]
  addopts = [
    "--showlocals",
    "--strict-config",
    "--strict-markers",
    "-p no:doctest",    # using sybil
    "-ra",
  ]
  filterwarnings = ["error"]
  log_cli_level = "INFO"
  minversion = "6.0"
  testpaths = ["tests/", "docs", "src/"]
  xfail_strict = true


[tool.coverage]
  report.exclude_also = ['\.\.\.', 'if typing.TYPE_CHECKING:']
  run.source          = ["zeroth"]

[tool.mypy]
  disallow_incomplete_defs = false
  disallow_untyped_defs    = false
  enable_error_code        = ["ignore-without-code", "redundant-expr", "truthy-bool"]
  files                    = ["src"]
  python_version           = "3.8"
  strict                   = true
  warn_unreachable         = true
  warn_unused_configs      = true

  [[tool.mypy.overrides]]
    disallow_incomplete_defs = true
    disallow_untyped_defs    = true
    module                   = "zeroth.*"


[tool.ruff]
  src = ["src"]

  [tool.ruff.lint]
    extend-select = ["ALL"]
    ignore = [
      "D203",    # 1 blank line required before class docstring
      "D213",    # Multi-line docstring summary should start at the second line
      "FIX002",  # Line contains TODO, consider resolving the issue
      "ISC001",  # Conflicts with formatter
      "PLR09",   # Too many <...>
      "PLR2004", # Magic value used in comparison
      "TD002",   # Missing author in TODO
      "TD003"    # Missing issue link on the line following this TODO
    ]

    [tool.ruff.lint.per-file-ignores]
      "noxfile.py" = ["T20"]
      "tests/**"   = ["ANN", "INP001", "S101", "T20"]


[tool.pylint]
  ignore-paths = [".*/_version.py"]
  messages_control.disable = [
    "design",
    "fixme",
    "line-too-long",
    "missing-function-docstring",
    "missing-module-docstring",
    "wrong-import-position",
  ]
  py-version = "3.8"
  reports.output-format = "colorized"
  similarities.ignore-imports = "yes"
